version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1

jobs:
  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
  configure-server:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["05:f8:55:c8:2e:f3:f5:39:bb:1c:96:82:16:90:b9:88"]
      - run:
          name: Install ansible
          command: apk add --update ansible openssh
      - run:
          name: Add server to known hosts
          command: ssh-keyscan -H 54.175.148.51 >> ~/.ssh/known_hosts
      - run:
          name: Configure server
          command: ansible-playbook main-remote.yml -i inventory
  smoke-test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command: return 1
      - destroy_environment
      # - run: apk add --update curl
      # - run:
      #     name: smoke test
      #     command: |
      #       URL="http://54.175.148.51:3000"
      #       # Test if website exists
      #       if curl -s --head ${URL} 
      #       then
      #         return 0
      #       else
      #         return 1
      #       fi

workflows:
  ansible-workflow:
    jobs:
      - create-infrastructure
      # - configure-server
      - smoke-test:
          requires:
            - create-infrastructure
